#include<bits/stdc++.h>
using namespace std;
struct node{
    int key;
    struct node* left;
    struct node* right;
    node(int k){
        key=k;
        left=right=NULL;
    }
};
void printTreeInorder(node *root){
    if(!root){
        return;        
    }
    cout<<root->key<<"  ";
    printTreeInorder(root->left);
    printTreeInorder(root->right);
    
}
int  sumOfDigits(int n){
    int sum=0;
    while(n){
        sum+=n%10;
        n=n/10;
    }
    return sum;
}


void replaceTree(node* root){
    if(!root){
        return ;
    }
    root->key=sumOfDigits(root->key);
    replaceTree(root->left);
    replaceTree(root->right);
    
}

int printcount(node* root,int k){
    if(!root){
        return 0;
    }
    static int count=0;
    if(root->key==k){
        count++;
    }
    printcount(root->left,k);
    printcount(root->right,k);
    
    return count;
}

int main(){
    node *root=new node(52);
    root->left=new node(13);
    root->right=new node(16);
    root->left->left=new node(17);
    root->left->right=new node(112);
    root->right->left=new node(7);
    root->right->right=new node(34);
    root->left->left->left=new node(4);
    root->left->left->right=new node(13);
    if(!root)
        return -1;
    printTreeInorder(root);
    cout<<endl<<endl;
    replaceTree(root);
    int n=7;
    cout<<printcount(root,n);
    return 0;
}