struct node{
    int data;
    node *next;
    node(int x){        // constructor
        data=x;
        next=NULL;
    }
};
void printList(node *head){  //print nodes
    node *curr=head;
    while(curr!=NULL){
        cout<<curr->data<<" -> ";
        curr=curr->next;
    }
    cout<<endl<<endl;
}
node *insertend(node *head,int x){ // insert node at end of LL
    
    node *temp=new node(x);
    if(head==NULL)
        return temp;
    node *curr=head;
    while(curr->next!=NULL)
        curr=curr->next;
    curr->next=temp;
 return head;

}
node *insertfront(node *head,int x){  //insert node at front
    node *temp=new node(x);
    temp->next=head;
    return temp;
}

node *delhead(node *head){ // delete head of LL
    if(head==NULL)
        return NULL;
    else{
    node *temp=head->next;
    delete head;
    return temp;
    }
    
}
node *delLastnode(node *head)
{
    if(head==NULL)
        return NULL;
    else{
        node *curr=head;
        while(curr->next->next!=NULL){
            curr->next=NULL;
        }
    }   
        return head;
}
int main() {
    node *head=new node(10);
    head->next=new node(20);
    head->next->next=new node(30);
    head=insertend(head,40); // insert node at end
    head=insertfront(head,0);//insert node at front 
    printList(head);  // to print nodes
    head=delhead(head); // delete head of LL
    printList(head);// to print after removal of head  
    head=delLastnode(head);
     printList(head);
    
    return 0;
    }